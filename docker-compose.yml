services:
  # Database Service (PostgreSQL)
  db:
    image: postgres:13-alpine # Alpine for smaller size
    volumes:
      - db_data:/var/lib/postgresql/data # Persist data outside the container
    environment:
      - POSTGRES_USER=mydbuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase
    restart: always # Restart policy for high availability

  # Web Application Service
  web:
    image: smartonfhir/patient-browser:latest # access with ext ip:3000
    ports:
      - "80" # Expose the application port
    environment:
      - DATABASE_URL=postgresql://mydbuser:mypassword@db:5432/mydatabase # Connect to the database
    depends_on:
      - db # Start the database before the application
    restart: always
    deploy: 
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      resources:
        limits:
          cpus: '0.50' # Limits cpu resource as number of cores containers can use
          memory: 50M # Limits memory usage to 50MB
        reservations:
          cpus: '0.25' # cpu resource reserved for container




  # Load Balancer (Nginx)
  loadbalancer:
    image: nginx:1.21-alpine # Nginx and Alpine for smaller size
    ports:
      - "3000:80" # Expose port 80 for incoming traffic
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount Nginx configuration (read-only)
    depends_on:
      - web # Start the web application before the load balancer
    restart: always

volumes:
  db_data: # Define the named volume for database persistence

